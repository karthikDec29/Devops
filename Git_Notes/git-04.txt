Git rebase
===================
This is called as fastforward merge where the commits coming from a 
branch are projected as the top most commits on master branch

1 Implement step1-6 from above scenario

2 To rebase test with master
  git checkout test
  git rebase master
  git checkout master
  git merge test

3 Check the commit history
  git log --oneline


=====================================================================

Git Cherrypicking
=========================
This is used to selectivey pick up certain commits and add them to the 
master branch

1 On master create few commits
  a--->b

2 Create a test branch and create few commits
  git checkout -b test
  a--->b--->c--->d--->e--->f--->g

3 To bring only c and e commits to master
  git checkout master
  git cherry-pick c_commitid e_commitid


Git reset 
==============
This is a command of git using which we can toggle between multiple
versions of git and access whichever version we want

Reset can be done in 3 ways
1 Hard reset
2 soft reset
3 Mixed reset

In hard reset HEAD simply points to an older commit adn we can see the 
data as present at the time of that older commit

1 Create few commits on master
  a-->b--->c

2 To jump to b commit from c
  git reset --hard b_commit_id

------------------------------------------------------------------
Soft reset will also move the head to an older commit but
we will see the condition of the git repository as just one
step prior to the c commit ie the files will be seen in the
stagging area

git reset --soft b_commitid

--------------------------------------------------------------------
Mixed reset also moves the head to an older commit
but we will see the condition of git as 2 steps prior to the c commit
ie the files will be present in the untracked/modified section

git reset --mixed b_commitid
