Sonarqube Setup:

SonarQube is an open-source static testing analysis software, it is used by developers to manage source code quality and consistency.


Prerequisites
===============
Source: https://docs.sonarqube.org/latest/requirements/requirements/

An EC2 instance with a minimum of 2 GB RAM (t2.small)

Java 11 installation
amazon-linux-extras list
amazon-linux-extras install java-openjdk11

SonarQube cannot be run as root on Unix-based systems, so create a dedicated user account for SonarQube if necessary.

Installation steps:
===================

1.Download SonarQube latest verions on to EC2 instace

2.cd /opt  
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.6.zip  

3.extract packages
unzip /opt/sonarqube-7.6.zip

4.Create user sonar  and Change ownershipt to the user and Switch to Linux binaries directory to start service

useradd -d /opt/ sonar
chown -R sonar:sonar /opt/sonarqube-7.6
cd /opt/sonarqube-x.x/bin/linux-x86-64   
./sonar.sh start

5.Connect to the SonarQube server through the browser. It uses port 9000.
Note: Port should be opened in the Security group

http://<Public-IP>:9000


Integrate_sonar_with_jenkins:
=============================

1.On Sonarqube server
Generate a sonarqube token to authenticate from Jenkins

2.On Jenkins server

Install Sonarqube plugin

Configure Sonarqube credentials

Add Sonarqube to jenkins "configure system"

Install SonarScanner

Run Pipeline job
========================
pipeline:
================================================================
pipeline{
    agent any
   
    stages{
       stage('GetCode'){
            steps{
                git 'https://github.com/AnupamaSoma/maven-project.git'
            }
         }        
       stage('Build'){
            steps{
                sh 'mvn package'
            }
         }
        stage('SonarQube analysis') {

        steps{
        withSonarQubeEnv('sonarqube-7.6') { 
        
        sh "mvn sonar:sonar"
    }
        }
        }
       
    }
}
