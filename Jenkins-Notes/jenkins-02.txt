Setting up tomcat on QA and ProdServer
==============================================================
1 Connect to QAServer AWS instance using git bash

2 Update the apt repository
  sudo apt-get update

3 Install tomcat9
  sudo apt-get install -y tomcat9

4 Install tomcat9-admin
  sudo apt-get isntall -y tomcat9-admin

5 Edit the tomcat-users.xml file
  sudo vim /etc/tomcat9/tomcat-users.xml
  Delete the entire content of the file and copy paste the below content
 
  <tomcat-users>
       <user username="admin" password="password" roles="manager-script"/>
  </tomcat-users>

6 Restart tomcat
  sudo service tomcat9 restart

Repeat the above 6 steps on the Prodserver AWS instance

===============================================================================
Day 3
===============================================================================
Stage 1 (Continuous Download)
====================================
1 Open the dashboard of Jenkins
2 Click on New item---->enter item name as "Development"
3 Select Free style project---->OK
4 Go to Source code management
5 Select Git
8 Enter github url where developers have uploaded the code
  https://github.com/AnupamaSoma/maven-project.git
9 Click on Apply--->Save
10 Go to the dashboard of Jenkins
11 Click on Build icon
   This job will download all the code from github repository
   into the Jenkinsserver AWS instance

----------------------------------------------------------------------
Stage 2 (Continuous Build)
================================
1 Open the dashboard of Jenkins
2 Go to the Development job--->Click on Configure
3 Go to Build section
4 Click on "Add build step"
5 Click on "Invoke top level maven target"
6 Enter Goal as: package
7 Apply--->Save
8 Go to the dashboard of Jenkins
9 Go to the Development job and click on Build icon
  This job will conver the code into an artifact and this artifact
  comes in the format of a war file

------------------------------------------------------------------------
Stage 3 (Continuous Deployment)
====================================
1 Open the dashboard of Jenkins
2 Click on Manage Jenkins
3 Click on Manage Plugins
4 Go to Available section
5 Search for "Deploy to container" plugin
6 Click on Install without restart
7 Go to the dashoard of jenkins
8 Go to the Development job
9 Click on Configure
10 Go to Posy build actions
11 Click on Add post build action
12 Click on Deploy war/ear to containers
   war/ear file: **\*.war
   Context path: qaapp
   Click on Add contianer
   Select tomcat9
   Enter tomcat credentials
   Tomcat url: private_ip_qaserver:8080
13 Apply--->Save
14 Go to the dashboard of jenkins
15 Go to the development job---->Click on build
   This job will deploy the artifact into the QAServers
   and to access the application from the level of browser
   public_ip_qaserver:8080/qaapp

===============================================================

===============================================================
Stage 4 (Continuous Testing)
===================================
1 Open the dashbord of Jenkins
2 Click on New item--->Enter item name as "Testing"
3 Select Free style project--->OK
4 Go to Source Code Management
5 Select Git
6 Enter the github url where testers have uploaded the 
  selenium test scripts
  https://github.com/AnupamaSoma/FunctionalTesting.git
7 Go to Build section
8 Click on Add build step
9 Click onExecute shell
  java -jar path_where_testing.jar_is_downloaded
10 Apply---->Save
11 Go to the dashboard of Jenkins
11 Go to the Testing job---->Click on Build icon
   This job will download the selenium test scripts and execute them

=========================================================================
Linking the Development job with the Testing job
----------------------------------------------------
1 Open the dashboard of Jenkins
2 Go to Development job---->Configure
3 Go to Post build actions
4 Click on Add post build action
5 Click on Build other projects
6 Enter project name as "Testing"
7 Click on Save
   Now if we run the Development job it will run the first three stages
  of CI-CD and then it will call the Testing job which will run the
  fourth stage

==================================================================
Copying artifacts from Development job to Testing job
=========================================================
1 Open the dashboard of Jenkins
2 Click on Manage Jenkins--->Manage plugins
3 Go to Availbale section--->Search for "Copy Artifact" plugun
4 Click on Install without restart
5 Go to the dashboard of Jenkins
6 Go to the Development job--->Click on Configure
7 Go to Post build actions
8 Click on Add post build actions
9 Click on Archive the artifacts
10 Enter files to be archived as **\*.war
11 Click on Apply--->>Save
12 Go to the dashboard of jenkins
13 Go to the Testing job---->Click on configure
14 Go to Build section
15 Click on Add build step
15 Click on Copy artifacts from other project
16 Enter project name as "Development"
17 Apply---->Save
================================================================
Stage 5 (Continuous Delivery)
===================================
1 Open the dashboard of jenkins
2 Go to Testing job--->Configure
3 Go to Post build actions
4 Click on Add post build action
5 Click on Deploy war/ear to container
  war/ear files: **\*.war
  contextpath: prodapp
  Click on Add container
  Select tomcat9
  Enter username and password of tomcat9
  Romcat url: private_ip_of_prodserver:8080
6 Apply---->Save
