UseCase 1
===============
Create an nginx container in detached mode
docker run --name webserver -p 8888:80 -d nginx

To check if the nginx contianer is running
docker container ls

To access the ngonx from browser
public_ip_dockerhost:8888
============================================================================
UseCase 2
=================
Create a tomcat container and name it appserver
docker run --name appserver -p 9090:8080 -d tomee

To access tomcat from browser
Public_ip_of_dockerhost:9090

=============================================================================
UseCase 3
===================
Create jenkins container and do automtic port mapping
docker run  --name jenkins -d -P jenkins

To see the ports used by jenkins
docker port jenkins

To access the jenkins from browser
public_ip_of_dockerhost:port_no_from_previous_step

=============================================================
UseCase 4
Start centos as a container and launch interactive terminal on it
docker run --name c1 -it centos
exit
=============================================================
Usecase 5
Create an ubuntu container and launch interactive terminal in it
docker run --name u1 -it ubuntu
exit

==============================================================================
UseCase 6

Create a mysql container and go into its bash shell
Login as mysql root user and create few tables.

1 Create a mysql container
  docker run --name db -d -e MYSQL_ROOT_PASSWORD=password mysql:5

2 To open interactive bash shell in the container
  docker exec -it db bash

3 To login into the db as root user
  myssql -u root -p
  Enter password "password"

4 To see the list of availble databases
  show databases;

5 To move into any of the above database
  use db_name;
  Eg: use sys;

Linking of Container
==========================
To create a multi container architecture we have use the following ways
1 --link option
2 Docker compose
3 Docker network
4 Ansible playbooks

UseCase 
Create 2 busybooks containers c1 and c2 and link them

1 Create a busybox contaienr and name it c1
  docker run --name c1 -it busybox

2 To come out of the c1 contaienr without exit
  ctrl+p,ctrl+q

3 Create another busybox container c2 and link it with c1 container
  docker run --name c2 -it --link c1:mybusybox  busybox

4 Check if c2 is pinging to c1
  ping c1
=======================================================
UseCase
Create a mysql container and link it with wordpress container

1 Create a mysql container
  docker run --name db -d -e MYSQL_ROOT_PASSWORD=password mysql:5

2 To create a wordpress container and link with mysql container
  docker run --name mywordpress -d -p 8888:80 --link db:mysql wordpress

3 Check if the mysql and wordpress containers are running
  docker container ls

4 To acces wordpress from browser
  public_ip_dockerhost:8888
==============================================================
Use Case
================
Setup a postgres db and link with adminer container to access db from browser

1 Create a postgres db container
  docker run --name db -d -e POSTGRES_PASSWORD=password -e POSTGRES_USER=myuser
                                                 -e POSTGRES_DB=mydb postgres

2 Create an adminer container and link witj postgres 
  docker run --name myadminer -d -p 9999:8080 --link db:postgres adminer

3 To access from level of browser
  public_ip_of_dockerhost:9999
==============================================================================

UseCase
===========
Setup LAMP architecture where a mysql container can be linked
with an apache and php container

1 Create a mysql container
  docker run --name db -d -e MYSQL_ROOT_PASSWORD=password mysql

2 Create an apache and link with mysql container
  docker run --name apache -d -p 9090:80 --link db:mysql  httpd


3 Create a php container and link with apache and mysql containers
  docker run --name php -d --link db:mysql --link apache:httpd php:7.2-apache

4 To check if php container is linked with mysql and apache container
  docker inspect php
  Search for "Links" section

